version: '3.8'

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  scylla-node1:
    image: scylladb/scylla
    container_name: scylla-node1
    volumes:
      - scylla-data1:/var/lib/scylla/data
      - scylla-commitlog1:/var/lib/scylla/commitlog
    deploy:
      resources:
        limits:
          memory: 1500M

  scylla-node2:
    image: scylladb/scylla
    container_name: scylla-node2
    command: --seeds=scylla-node1
    volumes:
      - scylla-data2:/var/lib/scylla/data
      - scylla-commitlog2:/var/lib/scylla/commitlog
    deploy:
      resources:
        limits:
          memory: 1500M

  scylla-node3:
    image: scylladb/scylla
    container_name: scylla-node3
    command: --seeds=scylla-node1
    volumes:
      - scylla-data3:/var/lib/scylla/data
      - scylla-commitlog3:/var/lib/scylla/commitlog
    deploy:
      resources:
        limits:
          memory: 1500M

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: metadataDB
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:8.11.1
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  log-ingestor:
    build:
      context: ./Backend/log-ingestor
    ports:
      - "3000:3000"
    command: [ "./wait-for-postgres.sh", "postgres:5432", "myuser", "mypassword", "metadataDB", "java", "-jar", "log-ingestor.jar" ]
    depends_on:
      - scylla-node1
      - scylla-node2
      - scylla-node3
      - postgres
      - kafka
      - elasticsearch
      - redis

  query-interface:
    build:
      context: ./Backend/query-interface
    command: [ "./wait-for-postgres.sh", "postgres:5432", "myuser", "mypassword", "metadataDB", "java", "-jar", "query-interface.jar" ]
    ports:
      - "4000:4000"
    depends_on:
      - scylla-node1
      - scylla-node2
      - scylla-node3
      - postgres
      - kafka
      - elasticsearch
      - redis

  frontend:
    build: ./Frontend/my-app
    ports:
      - "5001:5001"
    depends_on:
      - log-ingestor
      - query-interface

volumes:
  scylla-data1:
  scylla-data2:
  scylla-data3:
  scylla-commitlog1:
  scylla-commitlog2:
  scylla-commitlog3:
  postgres-data:
  elasticsearch-data:
